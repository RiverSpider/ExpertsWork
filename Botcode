using System;
using System.Threading;
using Telegram.Bot;
using Telegram.Bot.Types;
using Telegram.Bot.Types.InputFiles;
using Npgsql;
using System.IO;
using System.Configuration;

/* Для работы нужно уставносить все зависимости и добавить файл App.config*/


namespace ExpertBot
{

    internal class Program
    {
        /* Тут мы создаём список пользователей и чатайдишников */
        public static string? name;
        /* Вот эти айди */
        public static List<string> moders = new List<string>();
        public static List<string> experts = new List<string>(); // Добавь проверку на эксперта и воркера(это те кто файлы добавляют)
        public static List<string> workers = new List<string>();
        public static SortedSet<long> ChatIDs = new();

        public static Dictionary<string, string> FileFormDict = new Dictionary<string, string>();
        static void Main(string[] args)
        {
            /*Тута подключаемся к ДБ и получаем айдишники */
            string connectionString = ConfigurationManager.ConnectionStrings["ExpertBot"].ConnectionString;
            using (NpgsqlConnection connection = new NpgsqlConnection(connectionString))
            {
                connection.Open();

                string query = "SELECT moder, expert, worker FROM users";
                using (NpgsqlCommand command = new NpgsqlCommand(query, connection))
                {
                    using (NpgsqlDataReader reader = command.ExecuteReader())
                    {
                        

                        while (reader.Read())
                        {
                            string moderValues = (string)reader.GetValue(0); /* Везде содержатся ваши айди */
                            string expertValues = (string)reader.GetValue(1);
                            string workerValues = (string)reader.GetValue(2);
                            moders.Add(moderValues);
                            experts.Add(expertValues);
                            workers.Add(workerValues);
                        }
                    }
                }
            }




            /* Тут просто инициализирую бота и даю методы, ReadLine Здесь нужен чтобы программа
             * не заканчивала свою раюоту и бот работал, как будет сервер так поменяем*/
            var client = new TelegramBotClient("5844793789:AAEx-E8FfHw9SBbJuMroR94npIv-J2rI0_E");
            client.StartReceiving(Update, Error);
            Console.ReadLine();

        }

        static Task Error(ITelegramBotClient arg1, Exception arg2, CancellationToken arg3)
        /* Это шняга на случай всяких ошибок, заполнять её возможно вообще не придётся*/
        {
            throw new NotImplementedException();
        }

        async static Task Update(ITelegramBotClient botClient, Update update, CancellationToken token)
        {
            /*Тут основная часть программы, переменная message - непосредственно то, что нам отправил пользователь*/
            var message = update.Message;
            if (message != null)
            {
                if (message.Text != null) /*эта проверка на спам картинками и прочей фингёй, мб можно убрать*/
                {
                    Console.WriteLine(message.Text);
                    if (message.Text.ToLower() == "/start") /*Здесь находится псевдо меню в формате сообщение - ответ, 
                                                             когда разберётесь с разными правами доступа сделаем лучше*/
                    {
                        // Спрашиваем имя и если оно находится в списке пользователей даём ему доступ 
                        if (moders.Contains(message.Chat.Username)) // Теперь тут проверяют на модера 
                        {
                            ChatIDs.Add(message.Chat.Id);
                        }
                        await botClient.SendTextMessageAsync(message.Chat.Id, "Добро пожаловать");
                        await botClient.SendTextMessageAsync(message.Chat.Id, "Выберите вашу роль(Введите слово без кавычек):\n1.Эксперт - введите '/expert'\n2Проверяющий - введите '/checker'");
                    }
                    if (message.Text.ToLower() == "/expert" && ChatIDs.Contains(message.Chat.Id)) /*Выводим функции эксперта*/
                    {
                        await botClient.SendTextMessageAsync(message.Chat.Id, "Как эксперт вы можете:\nПросмотреть выложенные документы - '/docs_watch'\nЗайти как проверяющий - '/checker'");
                    }
                    if (message.Text.ToLower() == "/checker" && ChatIDs.Contains(message.Chat.Id)) /*Выводим функции проверяющего*/
                    {
                        await botClient.SendTextMessageAsync(message.Chat.Id, "Как проверяющий вы можете:\nПросмотреть выложенные документы - '/docs_watch'\n" +
                            "Добавить документ - '/docs_add',отпрвьте файл в этом же сообщении\nЗайти как эксперт - '/expert'");
                    }
                    if (message.Text.ToLower() == "/docs_watch" && ChatIDs.Contains(message.Chat.Id))
                    {
                        StreamReader StreamR = new StreamReader("C:\\Users\\ov00v\\Desktop\\BotLibr.txt");
                        int count = Convert.ToInt32(StreamR.ReadLine());
                        string Reply = "";
                        if (count == 0)
                        {
                            await botClient.SendTextMessageAsync(message.Chat.Id, "В данный момент в системе нет файлов");
                        }
                        else
                        {
                            for (int i = 0; i < count; i++)
                            {
                                string Str = StreamR.ReadLine();
                                Reply = Reply + Convert.ToString(i + 1) + ". " + Str + "\n";
                            }
                            StreamR.Close();
                            Reply = "В базе в данный момент файлов " + Convert.ToString(count) + ".\n" + Reply;
                            await botClient.SendTextMessageAsync(message.Chat.Id, Reply);
                            await botClient.SendTextMessageAsync(message.Chat.Id, "Для того чтобы скачать документ, введите '/docs_download 'номер файла' '\n" +
                                "Для того чтобы удалить документ, введите '/docs_delete 'номер файла' ' (функция проверяющего)");
                        }
                    }
                    if (message.Text.ToLower() == "/docs_add" && ChatIDs.Contains(message.Chat.Id))
                    {
                        await botClient.SendTextMessageAsync(message.Chat.Id, "Отправьте файл\n Для добавления вопросов - '/add_questions'");
                    }
                    if ((message.Text.ToLower().Split(" ")[0] == "/docs_delete") && (message.Text.ToLower().Split(" ").Length == 2) && ChatIDs.Contains(message.Chat.Id))
                    {
                        StreamReader StreamR = new StreamReader("C:\\Users\\ov00v\\Desktop\\BotLibr.txt");
                        int count = Convert.ToInt32(StreamR.ReadLine());
                        string Reply = StreamR.ReadToEnd();
                        StreamR.Close();
                        string file_name = Reply.Split("\n")[Convert.ToInt32(message.Text.ToLower().Split(" ")[1]) - 1];
                        Reply = Reply.Replace("\n" + file_name, "");
                        StreamWriter StreamW = new StreamWriter("C:\\Users\\ov00v\\Desktop\\BotLibr.txt", false);
                        StreamW.Write(Convert.ToString(count - 1) + "\n" + Reply);
                        StreamW.Close();
                        FileInfo fileInfo = new FileInfo("C:\\Users\\ov00v\\Desktop\\" + file_name);
                        fileInfo.Delete();
                        bool fileExist = System.IO.File.Exists("C:\\Users\\ov00v\\Desktop\\Bot_forms\\" + file_name);
                        if (fileExist)
                        {
                            FileInfo fileInfoForms = new FileInfo("C:\\Users\\ov00v\\Desktop\\Bot_forms\\" + file_name);
                            fileInfoForms.Delete();
                            FileFormDict.Remove(file_name);
                        }
                        await botClient.SendTextMessageAsync(message.Chat.Id, "Файл удалён");
                    }
                    if ((message.Text.ToLower().Split(" ")[0] == "/docs_download") && (message.Text.ToLower().Split(" ").Length == 2) && ChatIDs.Contains(message.Chat.Id))
                    {

                        StreamReader StreamR = new StreamReader("C:\\Users\\ov00v\\Desktop\\BotLibr.txt");
                        string Reply = StreamR.ReadToEnd();
                        StreamR.Close();
                        string file_name = Reply.Split("\n")[Convert.ToInt32(message.Text.ToLower().Split(" ")[1])];
                        await using Stream stream = System.IO.File.OpenRead("C:\\Users\\ov00v\\Desktop\\" + file_name);
                        await botClient.SendDocumentAsync(message.Chat.Id, new InputOnlineFile(stream, file_name));

                    }
                    if (message.Text.ToLower() == "/add_questions" && ChatIDs.Contains(message.Chat.Id))
                    {
                        await botClient.SendTextMessageAsync(message.Chat.Id,
                            "Отправьте название документа и вопросы(Документ: name \n Вопросы: вопрос1\nвопрос2)");
                    }
                    if (message.Text.ToLower().Contains("документ:") && ChatIDs.Contains(message.Chat.Id))
                    {
                        string text = message.Text;
                        string[] subs = text.Split('\n');
                        string filePath = "C:\\Users\\ov00v\\Desktop\\Bot_forms\\";
                        int found = subs[0].IndexOf(":");
                        string name = subs[0].Substring(found + 2);
                        int found2 = name.IndexOf(".");
                        string nameF = name.Substring(0, found2);
                        nameF = nameF + ".txt";
                        filePath = filePath + nameF;
                        int found3 = subs[1].IndexOf(":");
                        subs[1] = subs[1].Substring(found3 + 2);
                        FileFormDict.Add(name, nameF);
                        // открываем файл если нет файла то создаем файл
                        using (StreamWriter fileStream = System.IO.File.Exists(filePath) ? System.IO.File.AppendText(filePath) : System.IO.File.CreateText(filePath))
                        {
                            for (int i = 1; i < subs.Length; i++)
                            {
                                fileStream.WriteLine(subs[i]);
                            }
                        }
                    }


                }

                if (message.Document != null && ChatIDs.Contains(message.Chat.Id)) /*Здесь мы будем скачивать документ, большинстов команд я взял из гайда и немного
                                                 переиначил(потому подробных пояснений не просите), но соль в том, что когда нам посылают файл, мы
                                                 сохраняем его на рабочем столе
                                                 как оно будет потом, я не знаю, но в моих планах пока указать путь до папки на рабочем столе*/
                {
                    await botClient.SendTextMessageAsync(message.Chat.Id, "Файл принят");

                    var fileId = update.Message.Document.FileId;
                    var fileInfo = await botClient.GetFileAsync(fileId);
                    var filePath = fileInfo.FilePath;

                    string destinationFilePath = $@"{Environment.GetFolderPath(Environment.SpecialFolder.Desktop)}\{message.Document.FileName}";
                    await using Stream fileStream = System.IO.File.OpenWrite(destinationFilePath);
                    await botClient.DownloadFileAsync(filePath, fileStream);
                    fileStream.Close();
                    StreamReader StreamR = new StreamReader("C:\\UC:\\Users\\ov00v\\Desktop\\BotLibr.txt");
                    int count = Convert.ToInt32(StreamR.ReadLine());
                    string Reply = StreamR.ReadToEnd();
                    StreamR.Close();
                    StreamWriter StreamW = new StreamWriter("C:\\Users\\ov00v\\Desktop\\BotLibr.txt", false);
                    StreamW.Write(Convert.ToString(count + 1) + "\n" + Reply + "\n" + message.Document.FileName);
                    StreamW.Close();
                }

            }


        }
    }
}
